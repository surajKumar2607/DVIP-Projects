# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1n8EDensiDOd0aICUB8DTcJy7_0UyIiAi
"""

import cv2
import numpy as np
from matplotlib import pyplot as plt
from filter import*



img1 = cv2.imread('C:/Users/91801/Documents/Personal Docs/MTECH/IIT Kgp Course/DVIP Lab/Assignment 5/DIVP_EXP 4_2/input/einstein.png',0)
img2 = cv2.imread('C:/Users/91801/Documents/Personal Docs/MTECH/IIT Kgp Course/DVIP Lab/Assignment 5/DIVP_EXP 4_2/input/marilyn.png',0)
img = cv2.imread('C:/Users/91801/Documents/Personal Docs/MTECH/IIT Kgp Course/DVIP Lab/Assignment 5/DIVP_EXP 4_2/input/lena.jpg',0)


img_fft1 = np.fft.fft2(img)
img_fft2 = np.fft.fftshift(img_fft1)

img_fft3 = np.fft.fft2(img)
img_fft4 = np.fft.fftshift(img_fft3)

op_spectrum_hpf = img_fft2 * ihpf(img, 18)
op_spectrum_lpf = img_fft4 * ilpf( img, 18)


img_fft1_mag = 20*np.log(abs(op_spectrum_hpf)) #for frequency plot
img_fft2_mag = 20*np.log(abs(op_spectrum_lpf)) #for frequency plot

img_re_1 = idft_image(op_spectrum_hpf) #for inverse fft of the transformed image
img_re_2 = idft_image(op_spectrum_lpf) #for inverse fft of the transformed image

plt.suptitle("IDEAL FILTER")
plt.subplot(211),plt.imshow(img, cmap = 'gray'), plt.title("Original Image")
plt.subplot(425),plt.imshow(img_re_1, cmap = 'gray'), plt.title("High pass Filter ")
plt.subplot(426),plt.imshow(img_fft1_mag, cmap = 'gray'), plt.title("High pass Filter Spectrum ")
plt.subplot(427),plt.imshow(img_re_2, cmap = 'gray'), plt.title("Low pass filter ")
plt.subplot(428),plt.imshow(img_fft2_mag, cmap = 'gray'), plt.title("Low pass Filter Spectrum ")
plt.show()


#Butterworth Filter

op_spectrum_hpf = img_fft2 * butterworth_hpf(img, 2, 18)
op_spectrum_lpf = img_fft4 * butterworth_lpf( img, 2, 18)


img_fft1_mag = 20*np.log(abs(op_spectrum_hpf)) #for frequency plot
img_fft2_mag = 20*np.log(abs(op_spectrum_lpf)) #for frequency plot

img_re_1 = idft_image(op_spectrum_hpf) #for inverse fft of the transformed image
img_re_2 = idft_image(op_spectrum_lpf) #for inverse fft of the transformed image

plt.suptitle("BUTTERWORTH FILTER, n=2")
plt.subplot(211),plt.imshow(img, cmap = 'gray'), plt.title("Original Image")
plt.subplot(425),plt.imshow(img_re_1, cmap = 'gray'), plt.title("High pass Filter ")
plt.subplot(426),plt.imshow(img_fft1_mag, cmap = 'gray'), plt.title("High pass Filter Spectrum ")
plt.subplot(427),plt.imshow(img_re_2, cmap = 'gray'), plt.title("Low pass filter ")
plt.subplot(428),plt.imshow(img_fft2_mag, cmap = 'gray'), plt.title("Low pass Filter Spectrum ")
plt.show()

#Gaussian Filter

op_spectrum_hpf = img_fft2 * gaussian_lpf(img, 18)
op_spectrum_lpf = img_fft4 * gaussian_hpf(img, 18)


img_fft1_mag = 20*np.log(abs(op_spectrum_hpf)) #for frequency plot
img_fft2_mag = 20*np.log(abs(op_spectrum_lpf)) #for frequency plot

img_re_1 = idft_image(op_spectrum_hpf) #for inverse fft of the transformed image
img_re_2 = idft_image(op_spectrum_lpf) #for inverse fft of the transformed image

plt.suptitle("GAUSSIAN FILTER, n=2")
plt.subplot(211),plt.imshow(img, cmap = 'gray'), plt.title("Original Image")
plt.subplot(425),plt.imshow(img_re_1, cmap = 'gray'), plt.title("High pass Filter ")
plt.subplot(426),plt.imshow(img_fft1_mag, cmap = 'gray'), plt.title("High pass Filter Spectrum ")
plt.subplot(427),plt.imshow(img_re_2, cmap = 'gray'), plt.title("Low pass filter ")
plt.subplot(428),plt.imshow(img_fft2_mag, cmap = 'gray'), plt.title("Low pass Filter Spectrum ")
plt.show()


a,b = img2.shape[:2]

img_fft1 = np.fft.fft2(img1)
img_fft2 = np.fft.fftshift(img_fft1)

img_fft3 = np.fft.fft2(img2)
img_fft4 = np.fft.fftshift(img_fft3)

op_spectrum_hpf = img_fft2 * ihpf(img1, 18)
op_spectrum_lpf = img_fft4 * ilpf( img2, 18)

op_spectrum_tot = (op_spectrum_hpf+op_spectrum_lpf)/2
img_fft1_mag = 20*np.log(abs(op_spectrum_tot))
img_re = idft_image(op_spectrum_tot)

plt.suptitle("Optical Illusion")
plt.subplot(131),plt.imshow(img1, cmap = 'gray'), plt.title("Einstein")
plt.subplot(132),plt.imshow(img2, cmap = 'gray'), plt.title("Marilyn")
plt.subplot(133),plt.imshow(img_re, cmap = 'gray'), plt.title("Einstein+Marilyn")

plt.show()

img3 = cv2.imread('C:/Users/91801/Documents/Personal Docs/MTECH/IIT Kgp Course/DVIP Lab/Assignment 5/DIVP_EXP 4_2/input/cameraman_noisy1.jpg',0)
img_fft5 = np.fft.fft2(img3)
img_fft6 = np.fft.fftshift(img_fft5)

op_spectrum_hpf = img_fft6 * gaussian_hpf(img3,30)
op_spectrum_hpf = img_fft6 * ihpf(img3,30)

op_spectrum_lpf = img_fft6 * gaussian_lpf( img3, 10)
op_spectrum_lpf = img_fft6 * ilpf( img3, 20)
op_spectrum_tot = (op_spectrum_hpf +op_spectrum_lpf)

img_fft2_mag = 20*np.log(abs(op_spectrum_tot))
img_re2 = idft_image(op_spectrum_tot)

plt.suptitle("USING IDEAL FILTER")
plt.subplot(131),plt.imshow(img_fft2_mag, cmap = 'gray'), plt.title("Freq Spectrum")
plt.subplot(133),plt.imshow(img_re2, cmap = 'gray'), plt.title("Reconstructed")
plt.subplot(132),plt.imshow(img3, cmap = 'gray'),plt.title("Original")
plt.show()

img